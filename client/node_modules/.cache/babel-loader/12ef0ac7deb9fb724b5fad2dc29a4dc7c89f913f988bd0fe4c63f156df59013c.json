{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sofian\\\\Desktop\\\\Mern-Blog\\\\client\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { formatISO9075 } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostPage() {\n  _s();\n  const [postInfo, setPostInfo] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:4000/post/${id}`).then(response => {\n      response.json().then(postInfo => setPostInfo(postInfo));\n    });\n  }, []);\n  if (!postInfo) return '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: postInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      children: formatISO9075(new Date(postInfo.createdAt))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author\",\n      children: [\"by @\", postInfo.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:4000/${postInfo.cover}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"con\",\n      dangerouslySetInnerHTML: {\n        __html: postInfo.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(PostPage, \"S7u3/m2ynFph0poP4feDI8MHEqU=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useEffect","useState","useParams","formatISO9075","jsxDEV","_jsxDEV","PostPage","_s","postInfo","setPostInfo","id","fetch","then","response","json","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","author","username","src","cover","alt","dangerouslySetInnerHTML","__html","content","_c","$RefreshReg$"],"sources":["C:/Users/sofian/Desktop/Mern-Blog/client/src/pages/PostPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {formatISO9075} from 'date-fns';\r\n\r\nexport default function PostPage(){\r\n    const [postInfo, setPostInfo] = useState(null);\r\n    const {id} = useParams();\r\n    useEffect(()=>{\r\n        fetch(`http://localhost:4000/post/${id}`).then(response => {\r\n            response.json().then(postInfo => \r\n                setPostInfo(postInfo) )\r\n        })\r\n    },[]);\r\n\r\n    if(!postInfo) return'';\r\n\r\n\r\n    return(\r\n        <div className=\"post-page\">\r\n            <h1>{postInfo.title}</h1>\r\n            <time>{formatISO9075(new Date(postInfo.createdAt))}</time>\r\n            <div className=\"author\">by @{postInfo.author.username}</div>\r\n            <div className=\"image\">\r\n                <img src={`http://localhost:4000/${postInfo.cover}`} alt=''/>\r\n            </div>\r\n            \r\n            <div className=\"con\" dangerouslySetInnerHTML={{__html:postInfo.content}}/>\r\n            \r\n\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAAQC,aAAa,QAAO,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM;IAACS;EAAE,CAAC,GAAGR,SAAS,EAAE;EACxBF,SAAS,CAAC,MAAI;IACVW,KAAK,CAAE,8BAA6BD,EAAG,EAAC,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAI;MACvDA,QAAQ,CAACC,IAAI,EAAE,CAACF,IAAI,CAACJ,QAAQ,IACzBC,WAAW,CAACD,QAAQ,CAAC,CAAE;IAC/B,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAEL,IAAG,CAACA,QAAQ,EAAE,OAAM,EAAE;EAGtB,oBACIH,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBX,OAAA;MAAAW,QAAA,EAAKR,QAAQ,CAACS;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzBhB,OAAA;MAAAW,QAAA,EAAOb,aAAa,CAAC,IAAImB,IAAI,CAACd,QAAQ,CAACe,SAAS,CAAC;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC1DhB,OAAA;MAAKU,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,MAAI,EAACR,QAAQ,CAACgB,MAAM,CAACC,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC5DhB,OAAA;MAAKU,SAAS,EAAC,OAAO;MAAAC,QAAA,eAClBX,OAAA;QAAKqB,GAAG,EAAG,yBAAwBlB,QAAQ,CAACmB,KAAM,EAAE;QAACC,GAAG,EAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3D,eAENhB,OAAA;MAAKU,SAAS,EAAC,KAAK;MAACc,uBAAuB,EAAE;QAACC,MAAM,EAACtB,QAAQ,CAACuB;MAAO;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGxE;AAEd;AAACd,EAAA,CA3BuBD,QAAQ;EAAA,QAEfJ,SAAS;AAAA;AAAA8B,EAAA,GAFF1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}