{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sofian\\\\Desktop\\\\Mern-Blog\\\\client\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  async function login(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.ok) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login\",\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: ev => setUsername(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: ev => setPassword(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","login","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/sofian/Desktop/Mern-Blog/client/src/pages/LoginPage.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function LoginPage() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n   async function login(ev){\r\n        ev.preventDefault();\r\n       const response = await fetch('http://localhost:4000/login', {\r\n            method:'POST',\r\n            body: JSON.stringify({username, password}),\r\n            headers: {'Content-Type': 'application/json'},\r\n            credentials: 'include',\r\n        });\r\n        if (response.ok){\r\n            \r\n        }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"login\" onSubmit={login}>\r\n        <h1>Login</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          value={username}\r\n          onChange={(ev) => setUsername(ev.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={(ev) => setPassword(ev.target.value)}\r\n        />\r\n\r\n        <button>Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC3C,eAAeS,KAAKA,CAACC,EAAE,EAAC;IACnBA,EAAE,CAACC,cAAc,EAAE;IACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACvDC,MAAM,EAAC,MAAM;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACZ,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1CW,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,IAAIP,QAAQ,CAACQ,EAAE,EAAC,CAEhB;EACJ;EAEF,oBACElB,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAMoB,SAAS,EAAC,OAAO;MAACC,QAAQ,EAAEd,KAAM;MAAAY,QAAA,gBACtCnB,OAAA;QAAAmB,QAAA,EAAI;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACdzB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEzB,QAAS;QAChB0B,QAAQ,EAAGrB,EAAE,IAAKJ,WAAW,CAACI,EAAE,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/C,eAEFzB,OAAA;QACE0B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEvB,QAAS;QAChBwB,QAAQ,EAAGrB,EAAE,IAAKF,WAAW,CAACE,EAAE,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/C,eAEFzB,OAAA;QAAAmB,QAAA,EAAQ;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACvB,EAAA,CAtCuBD,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}